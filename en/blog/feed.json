{
    "version": "https://jsonfeed.org/version/1",
    "title": "Norchevsky Blog",
    "home_page_url": "https://teta42.github.io/Norchevsky/en/blog",
    "description": "Norchevsky Blog",
    "items": [
        {
            "id": "https://teta42.github.io/Norchevsky/en/blog/failure-in-localization",
            "content_html": "<p>I tried, but I couldn't get the localization to work. ðŸ˜“</p>\n<p>I spent the whole day trying to add an English translation, but no matter what I did or how hard I tried - nothing worked. ðŸ˜©</p>",
            "url": "https://teta42.github.io/Norchevsky/en/blog/failure-in-localization",
            "title": "Failure in Localization ðŸ˜ž",
            "summary": "I tried, but I couldn't get the localization to work. ðŸ˜“",
            "date_modified": "2025-08-09T00:00:00.000Z",
            "author": {
                "name": "Nicolas Tetha",
                "url": "https://t.me/Petaurka"
            },
            "tags": [
                "Story"
            ]
        },
        {
            "id": "https://teta42.github.io/Norchevsky/en/blog/MDQL",
            "content_html": "<p>MDQL â€” MarkDown Query Language</p>\n<p>If earlier to get context from a file it was necessary to either look at pre-created tl;dr, or ask a separate agent to compress the context from the file,</p>\n<p>now there is a separate query language for querying or changing data in MD files â€” <strong>MDQL</strong>.</p>\n<div class=\"theme-admonition theme-admonition-info admonition_xJq3 alert alert--info\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewBox=\"0 0 14 16\"><path fill-rule=\"evenodd\" d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"></path></svg></span>MDQL</div><div class=\"admonitionContent_BuS1\"><p>This is a language inherited from GraphQL, allowing agents to get and change only the necessary data from Markdown files. This ensures programmatic tl;dr, as well as transparency and control over queries.</p><p>MDQL optimizes work with a large number of documents, reducing data redundancy and speeding up query processing.</p><p>Both reading and writing are supported, which allows not only to retrieve information, but also to automatically update or structure the content.</p><p><strong>Example</strong> of a simple MDQL query:</p><div class=\"language-GraphQL language-graphql codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_QJqH\"><pre tabindex=\"0\" class=\"prism-code language-graphql codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token property-query\">file</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token attr-name\" style=\"color:#00a4db\">path</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"characters/hero.md\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token object\">frontmatter</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">name</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">role</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token property-query\">content</span><span class=\"token punctuation\" style=\"color:#393A34\">(</span><span class=\"token attr-name\" style=\"color:#00a4db\">filter</span><span class=\"token punctuation\" style=\"color:#393A34\">:</span><span class=\"token plain\"> </span><span class=\"token string\" style=\"color:#e3116c\">\"skills\"</span><span class=\"token punctuation\" style=\"color:#393A34\">)</span><span class=\"token plain\"> </span><span class=\"token punctuation\" style=\"color:#393A34\">{</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">title</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">      </span><span class=\"token property\" style=\"color:#36acaa\">description</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">    </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">  </span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><span class=\"token plain\"></span><br></span><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\"></span><span class=\"token punctuation\" style=\"color:#393A34\">}</span><br></span></code></pre></div></div><p>This query will extract only the name, role, and description of skills from the hero file.</p><div class=\"theme-admonition theme-admonition-caution admonition_xJq3 alert alert--warning\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"></path></svg></span>This is just an example</div><div class=\"admonitionContent_BuS1\"><p>MDQL is just an idea for now, the implementation will most likely look completely different</p></div></div></div></div>",
            "url": "https://teta42.github.io/Norchevsky/en/blog/MDQL",
            "title": "Your own structured query language",
            "summary": "MDQL â€” MarkDown Query Language",
            "date_modified": "2025-08-08T00:00:00.000Z",
            "author": {
                "name": "Nicolas Tetha",
                "url": "https://t.me/Petaurka"
            },
            "tags": [
                "Story"
            ]
        },
        {
            "id": "https://teta42.github.io/Norchevsky/en/blog/hooks-and-paths",
            "content_html": "<p>Hooks for Agent Story Generation</p>\n<div class=\"theme-admonition theme-admonition-info admonition_xJq3 alert alert--info\"><div class=\"admonitionHeading_Gvgb\"><span class=\"admonitionIcon_Rf37\"><svg viewBox=\"0 0 14 16\"><path fill-rule=\"evenodd\" d=\"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z\"></path></svg></span>According to the idea, plot hooks are eternal</div><div class=\"admonitionContent_BuS1\"><p>Because they have connections at different levels:</p><ul>\n<li>Primary - the object itself, which has plot possibilities</li>\n<li>Secondary - memories/traces of the object</li>\n</ul></div></div>\n<p>And if so, it turns out that even if an object is lost, it only means that <em>the system can introduce a plot line</em> to find the object, which is good for the game.</p>\n<hr>\n<p>Overall, it turns out that the only way to work with hooks is not to use them and add them, because new plot tropes may open up for us, which will create new events that will make more hooks.</p>",
            "url": "https://teta42.github.io/Norchevsky/en/blog/hooks-and-paths",
            "title": "About Hooks",
            "summary": "Hooks for Agent Story Generation",
            "date_modified": "2025-08-08T00:00:00.000Z",
            "author": {
                "name": "Nicolas Tetha",
                "url": "https://t.me/Petaurka"
            },
            "tags": [
                "Idea",
                "Think"
            ]
        },
        {
            "id": "https://teta42.github.io/Norchevsky/en/blog/added-welcome-page",
            "content_html": "<p><a href=\"https://teta42.github.io/Norchevsky/en/Norchevsky/welcome\">First</a> step in the project</p>",
            "url": "https://teta42.github.io/Norchevsky/en/blog/added-welcome-page",
            "title": "Added a Welcome Page",
            "summary": "First step in the project",
            "date_modified": "2025-08-07T00:00:00.000Z",
            "author": {
                "name": "Nicolas Tetha",
                "url": "https://t.me/Petaurka"
            },
            "tags": [
                "Story"
            ]
        },
        {
            "id": "https://teta42.github.io/Norchevsky/en/blog/the-idea-of-agent-stories",
            "content_html": "<p>How Agents Invent the Future</p>\n<p>According to the idea, worker agents when creating the future must take into account the <em>present</em> and the <em>past</em>.</p>\n<p>This means they must rely on <strong>their</strong> previous iterations.<br>\n<!-- -->These iterations store not only <strong>what</strong> they did (for example, came up with an event and a way to achieve it),<br>\n<!-- -->but also <strong>what prerequisites</strong> they left for future steps.</p>\n<p>Yes, during generation they can also consider the <strong>context of the whole world</strong>.<br>\n<!-- -->Therefore, the formula for generating the future looks something like this:</p>\n<div class=\"language-text codeBlockContainer_Ckt0 theme-code-block\" style=\"--prism-color:#393A34;--prism-background-color:#f6f8fa\"><div class=\"codeBlockContent_QJqH\"><pre tabindex=\"0\" class=\"prism-code language-text codeBlock_bY9V thin-scrollbar\" style=\"color:#393A34;background-color:#f6f8fa\"><code class=\"codeBlockLines_e6Vv\"><span class=\"token-line\" style=\"color:#393A34\"><span class=\"token plain\">past + present + previous iterations + world context = future events</span><br></span></code></pre></div></div>\n<p><strong>World context</strong> is everything that agents can additionally introduce into the game while preserving the lore and style,\nso that something new appears in the story, not just the same thing in a loop.</p>",
            "url": "https://teta42.github.io/Norchevsky/en/blog/the-idea-of-agent-stories",
            "title": "The Idea of Agent Stories",
            "summary": "How Agents Invent the Future",
            "date_modified": "2025-08-07T00:00:00.000Z",
            "author": {
                "name": "Nicolas Tetha",
                "url": "https://t.me/Petaurka"
            },
            "tags": [
                "Idea"
            ]
        },
        {
            "id": "https://teta42.github.io/Norchevsky/en/blog/first-blog-post",
            "content_html": "<p>First Steps in Documentation</p>\n<p>Today is the first day of development! ðŸŽ‰<br>\n<!-- -->I chose <strong>Docusaurus</strong> because of:</p>\n<ul>\n<li>âœ¨ Beauty</li>\n<li>ðŸ”§ Versatility</li>\n</ul>\n<p>It has blogs, documentation, and separate pages!</p>",
            "url": "https://teta42.github.io/Norchevsky/en/blog/first-blog-post",
            "title": "Documentation Begins",
            "summary": "First Steps in Documentation",
            "date_modified": "2025-08-06T00:00:00.000Z",
            "author": {
                "name": "Nicolas Tetha",
                "url": "https://t.me/Petaurka"
            },
            "tags": [
                "Story"
            ]
        },
        {
            "id": "https://teta42.github.io/Norchevsky/en/blog/norchevskys-appearance",
            "content_html": "<p>The Chthonic Appearance of Norchevsky</p>\n<p>His true appearance is that of a tall, slender humanoid with a wide mouth stretching from ear to ear filled with sharp teeth, and a single large eye in the middle with a pupil like Dio Brando from JoJo's Bizarre Adventure.</p>\n<p>He is pitch black, like tar, and his body is covered in some kind of tattered cloth. He is entirely black except for the whites of his eye and his gleaming white teeth.</p>\n<p>On his back, there's a not very tall but very sharp hump at shoulder blade level.</p>\n<p>Long, sharp fingers.</p>\n<p>He himself is kind-hearted and wouldn't hurt a fly.</p>\n<hr>",
            "url": "https://teta42.github.io/Norchevsky/en/blog/norchevskys-appearance",
            "title": "Norchevsky's Appearance",
            "summary": "The Chthonic Appearance of Norchevsky",
            "date_modified": "2025-08-05T00:00:00.000Z",
            "author": {
                "name": "Nicolas Tetha",
                "url": "https://t.me/Petaurka"
            },
            "tags": [
                "Think"
            ]
        }
    ]
}